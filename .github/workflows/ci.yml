name: ci

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

env:
  NODE_VERSION: '14'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-20.04
    if: (!contains(github.ref, 'refs/heads/master') || contains(github.ref, 'refs/tags/v'))
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: Lint
      run: yarn lint:js
    - name: Test
      run: yarn test:ember

  release:
    name: Release Package
    runs-on: ubuntu-20.04
    needs: test
    if: contains(github.ref, 'refs/tags/v')
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: yarn
    - name: Publish
      run: |
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/.npmrc
        npm publish --access public
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
