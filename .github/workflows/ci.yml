name: ci

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request: 

env:
  NODE_VERSION: '10'

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test
      run: yarn lint:js
  test:
    name: Run Tests
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test and Coverage report on PRs
      uses: mydea/ember-cli-code-coverage-action@v1
      if: ${{ github.event_name == 'pull_request' }}
      with:
        test-command: yarn test:ember-coverage
        repo-token: "${{ secrets.GITHUB_TOKEN }}"

    - name: Tests on master
      if: ${{ github.ref == 'refs/heads/master' }}
      run: yarn test:ember

  release:
    name: Release Package
    runs-on: ubuntu-20.04
    needs: test
    if: contains(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Publish
      run: |
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/.npmrc
        npm publish --access public
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
